// Generated by fbsgen from p/ds/prk/p4

import '../../ds.dart' as ds;


/// message P444441 {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required uint32 p2 = 3;
///   required uint32 p3 = 4;
///   required uint32 p4 = 5;
///   required ds.P1 l = 6;
/// }
class P444441 {
  static P444441 fromMap(Map<String,dynamic> map, [ P444441 item ]) {
    if (map == null) return item;

    item ??= new P444441();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._p3 = map["4"];
    item._p4 = map["5"];
    item._l = ds.P1.fromMap(map["6"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P444441 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P444441 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._p3,
    "5": item._p4,
    "6": item._l == null ? null : ds.P1.toMap(item._l),
  };
  static P444441 $create(
    int p0, int p1, int p2, int p3, int p4, ds.P1 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (p3 != null);
    assert (p4 != null);
    assert (l != null);
    return new P444441()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._p3 = p3
      .._p4 = p4
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_P3 = 4;
  static const int FN_P4 = 5;
  static const int FN_L = 6;

  int _p0;
  int _p1;
  int _p2;
  int _p3;
  int _p4;
  ds.P1 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  int get p3 => _p3;
  void set p3(int p3) { _p3 = p3; }

  /// required: 5
  int get p4 => _p4;
  void set p4(int p4) { _p4 = p4; }

  /// required: 6
  ds.P1 get l => _l;
  void set l(ds.P1 l) { _l = l; }
}



/// message P444444 {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required uint32 p2 = 3;
///   required uint32 p3 = 4;
///   required uint32 p4 = 5;
///   required ds.P4 l = 6;
/// }
class P444444 {
  static P444444 fromMap(Map<String,dynamic> map, [ P444444 item ]) {
    if (map == null) return item;

    item ??= new P444444();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._p3 = map["4"];
    item._p4 = map["5"];
    item._l = ds.P4.fromMap(map["6"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P444444 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P444444 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._p3,
    "5": item._p4,
    "6": item._l == null ? null : ds.P4.toMap(item._l),
  };
  static P444444 $create(
    int p0, int p1, int p2, int p3, int p4, ds.P4 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (p3 != null);
    assert (p4 != null);
    assert (l != null);
    return new P444444()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._p3 = p3
      .._p4 = p4
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_P3 = 4;
  static const int FN_P4 = 5;
  static const int FN_L = 6;

  int _p0;
  int _p1;
  int _p2;
  int _p3;
  int _p4;
  ds.P4 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  int get p3 => _p3;
  void set p3(int p3) { _p3 = p3; }

  /// required: 5
  int get p4 => _p4;
  void set p4(int p4) { _p4 = p4; }

  /// required: 6
  ds.P4 get l => _l;
  void set l(ds.P4 l) { _l = l; }
}



/// message P444448 {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required uint32 p2 = 3;
///   required uint32 p3 = 4;
///   required uint32 p4 = 5;
///   required ds.P8 l = 6;
/// }
class P444448 {
  static P444448 fromMap(Map<String,dynamic> map, [ P444448 item ]) {
    if (map == null) return item;

    item ??= new P444448();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._p3 = map["4"];
    item._p4 = map["5"];
    item._l = ds.P8.fromMap(map["6"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P444448 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P444448 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._p3,
    "5": item._p4,
    "6": item._l == null ? null : ds.P8.toMap(item._l),
  };
  static P444448 $create(
    int p0, int p1, int p2, int p3, int p4, ds.P8 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (p3 != null);
    assert (p4 != null);
    assert (l != null);
    return new P444448()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._p3 = p3
      .._p4 = p4
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_P3 = 4;
  static const int FN_P4 = 5;
  static const int FN_L = 6;

  int _p0;
  int _p1;
  int _p2;
  int _p3;
  int _p4;
  ds.P8 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  int get p3 => _p3;
  void set p3(int p3) { _p3 = p3; }

  /// required: 5
  int get p4 => _p4;
  void set p4(int p4) { _p4 = p4; }

  /// required: 6
  ds.P8 get l => _l;
  void set l(ds.P8 l) { _l = l; }
}



/// message P44444D {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required uint32 p2 = 3;
///   required uint32 p3 = 4;
///   required uint32 p4 = 5;
///   required ds.PD l = 6;
/// }
class P44444D {
  static P44444D fromMap(Map<String,dynamic> map, [ P44444D item ]) {
    if (map == null) return item;

    item ??= new P44444D();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._p3 = map["4"];
    item._p4 = map["5"];
    item._l = ds.PD.fromMap(map["6"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P44444D $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P44444D item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._p3,
    "5": item._p4,
    "6": item._l == null ? null : ds.PD.toMap(item._l),
  };
  static P44444D $create(
    int p0, int p1, int p2, int p3, int p4, ds.PD l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (p3 != null);
    assert (p4 != null);
    assert (l != null);
    return new P44444D()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._p3 = p3
      .._p4 = p4
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_P3 = 4;
  static const int FN_P4 = 5;
  static const int FN_L = 6;

  int _p0;
  int _p1;
  int _p2;
  int _p3;
  int _p4;
  ds.PD _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  int get p3 => _p3;
  void set p3(int p3) { _p3 = p3; }

  /// required: 5
  int get p4 => _p4;
  void set p4(int p4) { _p4 = p4; }

  /// required: 6
  ds.PD get l => _l;
  void set l(ds.PD l) { _l = l; }
}



/// message P44444K {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required uint32 p2 = 3;
///   required uint32 p3 = 4;
///   required uint32 p4 = 5;
///   required ds.PK l = 6;
/// }
class P44444K {
  static P44444K fromMap(Map<String,dynamic> map, [ P44444K item ]) {
    if (map == null) return item;

    item ??= new P44444K();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._p3 = map["4"];
    item._p4 = map["5"];
    item._l = ds.PK.fromMap(map["6"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P44444K $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P44444K item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._p3,
    "5": item._p4,
    "6": item._l == null ? null : ds.PK.toMap(item._l),
  };
  static P44444K $create(
    int p0, int p1, int p2, int p3, int p4, ds.PK l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (p3 != null);
    assert (p4 != null);
    assert (l != null);
    return new P44444K()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._p3 = p3
      .._p4 = p4
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_P3 = 4;
  static const int FN_P4 = 5;
  static const int FN_L = 6;

  int _p0;
  int _p1;
  int _p2;
  int _p3;
  int _p4;
  ds.PK _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  int get p3 => _p3;
  void set p3(int p3) { _p3 = p3; }

  /// required: 5
  int get p4 => _p4;
  void set p4(int p4) { _p4 = p4; }

  /// required: 6
  ds.PK get l => _l;
  void set l(ds.PK l) { _l = l; }
}



/// message P44444S {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required uint32 p2 = 3;
///   required uint32 p3 = 4;
///   required uint32 p4 = 5;
///   required ds.PS l = 6;
/// }
class P44444S {
  static P44444S fromMap(Map<String,dynamic> map, [ P44444S item ]) {
    if (map == null) return item;

    item ??= new P44444S();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._p3 = map["4"];
    item._p4 = map["5"];
    item._l = ds.PS.fromMap(map["6"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P44444S $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P44444S item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._p3,
    "5": item._p4,
    "6": item._l == null ? null : ds.PS.toMap(item._l),
  };
  static P44444S $create(
    int p0, int p1, int p2, int p3, int p4, ds.PS l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (p3 != null);
    assert (p4 != null);
    assert (l != null);
    return new P44444S()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._p3 = p3
      .._p4 = p4
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_P3 = 4;
  static const int FN_P4 = 5;
  static const int FN_L = 6;

  int _p0;
  int _p1;
  int _p2;
  int _p3;
  int _p4;
  ds.PS _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  int get p3 => _p3;
  void set p3(int p3) { _p3 = p3; }

  /// required: 5
  int get p4 => _p4;
  void set p4(int p4) { _p4 = p4; }

  /// required: 6
  ds.PS get l => _l;
  void set l(ds.PS l) { _l = l; }
}



/// message P44441 {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required uint32 p2 = 3;
///   required uint32 p3 = 4;
///   required ds.P1 l = 5;
/// }
class P44441 {
  static P44441 fromMap(Map<String,dynamic> map, [ P44441 item ]) {
    if (map == null) return item;

    item ??= new P44441();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._p3 = map["4"];
    item._l = ds.P1.fromMap(map["5"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P44441 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P44441 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._p3,
    "5": item._l == null ? null : ds.P1.toMap(item._l),
  };
  static P44441 $create(
    int p0, int p1, int p2, int p3, ds.P1 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (p3 != null);
    assert (l != null);
    return new P44441()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._p3 = p3
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_P3 = 4;
  static const int FN_L = 5;

  int _p0;
  int _p1;
  int _p2;
  int _p3;
  ds.P1 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  int get p3 => _p3;
  void set p3(int p3) { _p3 = p3; }

  /// required: 5
  ds.P1 get l => _l;
  void set l(ds.P1 l) { _l = l; }
}



/// message P44444 {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required uint32 p2 = 3;
///   required uint32 p3 = 4;
///   required ds.P4 l = 5;
/// }
class P44444 {
  static P44444 fromMap(Map<String,dynamic> map, [ P44444 item ]) {
    if (map == null) return item;

    item ??= new P44444();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._p3 = map["4"];
    item._l = ds.P4.fromMap(map["5"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P44444 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P44444 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._p3,
    "5": item._l == null ? null : ds.P4.toMap(item._l),
  };
  static P44444 $create(
    int p0, int p1, int p2, int p3, ds.P4 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (p3 != null);
    assert (l != null);
    return new P44444()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._p3 = p3
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_P3 = 4;
  static const int FN_L = 5;

  int _p0;
  int _p1;
  int _p2;
  int _p3;
  ds.P4 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  int get p3 => _p3;
  void set p3(int p3) { _p3 = p3; }

  /// required: 5
  ds.P4 get l => _l;
  void set l(ds.P4 l) { _l = l; }
}



/// message P44448 {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required uint32 p2 = 3;
///   required uint32 p3 = 4;
///   required ds.P8 l = 5;
/// }
class P44448 {
  static P44448 fromMap(Map<String,dynamic> map, [ P44448 item ]) {
    if (map == null) return item;

    item ??= new P44448();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._p3 = map["4"];
    item._l = ds.P8.fromMap(map["5"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P44448 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P44448 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._p3,
    "5": item._l == null ? null : ds.P8.toMap(item._l),
  };
  static P44448 $create(
    int p0, int p1, int p2, int p3, ds.P8 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (p3 != null);
    assert (l != null);
    return new P44448()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._p3 = p3
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_P3 = 4;
  static const int FN_L = 5;

  int _p0;
  int _p1;
  int _p2;
  int _p3;
  ds.P8 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  int get p3 => _p3;
  void set p3(int p3) { _p3 = p3; }

  /// required: 5
  ds.P8 get l => _l;
  void set l(ds.P8 l) { _l = l; }
}



/// message P4444D {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required uint32 p2 = 3;
///   required uint32 p3 = 4;
///   required ds.PD l = 5;
/// }
class P4444D {
  static P4444D fromMap(Map<String,dynamic> map, [ P4444D item ]) {
    if (map == null) return item;

    item ??= new P4444D();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._p3 = map["4"];
    item._l = ds.PD.fromMap(map["5"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4444D $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4444D item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._p3,
    "5": item._l == null ? null : ds.PD.toMap(item._l),
  };
  static P4444D $create(
    int p0, int p1, int p2, int p3, ds.PD l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (p3 != null);
    assert (l != null);
    return new P4444D()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._p3 = p3
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_P3 = 4;
  static const int FN_L = 5;

  int _p0;
  int _p1;
  int _p2;
  int _p3;
  ds.PD _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  int get p3 => _p3;
  void set p3(int p3) { _p3 = p3; }

  /// required: 5
  ds.PD get l => _l;
  void set l(ds.PD l) { _l = l; }
}



/// message P4444K {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required uint32 p2 = 3;
///   required uint32 p3 = 4;
///   required ds.PK l = 5;
/// }
class P4444K {
  static P4444K fromMap(Map<String,dynamic> map, [ P4444K item ]) {
    if (map == null) return item;

    item ??= new P4444K();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._p3 = map["4"];
    item._l = ds.PK.fromMap(map["5"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4444K $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4444K item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._p3,
    "5": item._l == null ? null : ds.PK.toMap(item._l),
  };
  static P4444K $create(
    int p0, int p1, int p2, int p3, ds.PK l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (p3 != null);
    assert (l != null);
    return new P4444K()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._p3 = p3
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_P3 = 4;
  static const int FN_L = 5;

  int _p0;
  int _p1;
  int _p2;
  int _p3;
  ds.PK _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  int get p3 => _p3;
  void set p3(int p3) { _p3 = p3; }

  /// required: 5
  ds.PK get l => _l;
  void set l(ds.PK l) { _l = l; }
}



/// message P4444S {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required uint32 p2 = 3;
///   required uint32 p3 = 4;
///   required ds.PS l = 5;
/// }
class P4444S {
  static P4444S fromMap(Map<String,dynamic> map, [ P4444S item ]) {
    if (map == null) return item;

    item ??= new P4444S();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._p3 = map["4"];
    item._l = ds.PS.fromMap(map["5"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4444S $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4444S item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._p3,
    "5": item._l == null ? null : ds.PS.toMap(item._l),
  };
  static P4444S $create(
    int p0, int p1, int p2, int p3, ds.PS l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (p3 != null);
    assert (l != null);
    return new P4444S()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._p3 = p3
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_P3 = 4;
  static const int FN_L = 5;

  int _p0;
  int _p1;
  int _p2;
  int _p3;
  ds.PS _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  int get p3 => _p3;
  void set p3(int p3) { _p3 = p3; }

  /// required: 5
  ds.PS get l => _l;
  void set l(ds.PS l) { _l = l; }
}



/// message P4441 {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required uint32 p2 = 3;
///   required ds.P1 l = 4;
/// }
class P4441 {
  static P4441 fromMap(Map<String,dynamic> map, [ P4441 item ]) {
    if (map == null) return item;

    item ??= new P4441();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._l = ds.P1.fromMap(map["4"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4441 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4441 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._l == null ? null : ds.P1.toMap(item._l),
  };
  static P4441 $create(
    int p0, int p1, int p2, ds.P1 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (l != null);
    return new P4441()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_L = 4;

  int _p0;
  int _p1;
  int _p2;
  ds.P1 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  ds.P1 get l => _l;
  void set l(ds.P1 l) { _l = l; }
}



/// message P4444 {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required uint32 p2 = 3;
///   required ds.P4 l = 4;
/// }
class P4444 {
  static P4444 fromMap(Map<String,dynamic> map, [ P4444 item ]) {
    if (map == null) return item;

    item ??= new P4444();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._l = ds.P4.fromMap(map["4"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4444 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4444 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._l == null ? null : ds.P4.toMap(item._l),
  };
  static P4444 $create(
    int p0, int p1, int p2, ds.P4 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (l != null);
    return new P4444()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_L = 4;

  int _p0;
  int _p1;
  int _p2;
  ds.P4 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  ds.P4 get l => _l;
  void set l(ds.P4 l) { _l = l; }
}



/// message P4448 {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required uint32 p2 = 3;
///   required ds.P8 l = 4;
/// }
class P4448 {
  static P4448 fromMap(Map<String,dynamic> map, [ P4448 item ]) {
    if (map == null) return item;

    item ??= new P4448();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._l = ds.P8.fromMap(map["4"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4448 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4448 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._l == null ? null : ds.P8.toMap(item._l),
  };
  static P4448 $create(
    int p0, int p1, int p2, ds.P8 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (l != null);
    return new P4448()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_L = 4;

  int _p0;
  int _p1;
  int _p2;
  ds.P8 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  ds.P8 get l => _l;
  void set l(ds.P8 l) { _l = l; }
}



/// message P444D {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required uint32 p2 = 3;
///   required ds.PD l = 4;
/// }
class P444D {
  static P444D fromMap(Map<String,dynamic> map, [ P444D item ]) {
    if (map == null) return item;

    item ??= new P444D();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._l = ds.PD.fromMap(map["4"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P444D $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P444D item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._l == null ? null : ds.PD.toMap(item._l),
  };
  static P444D $create(
    int p0, int p1, int p2, ds.PD l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (l != null);
    return new P444D()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_L = 4;

  int _p0;
  int _p1;
  int _p2;
  ds.PD _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  ds.PD get l => _l;
  void set l(ds.PD l) { _l = l; }
}



/// message P444K {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required uint32 p2 = 3;
///   required ds.PK l = 4;
/// }
class P444K {
  static P444K fromMap(Map<String,dynamic> map, [ P444K item ]) {
    if (map == null) return item;

    item ??= new P444K();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._l = ds.PK.fromMap(map["4"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P444K $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P444K item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._l == null ? null : ds.PK.toMap(item._l),
  };
  static P444K $create(
    int p0, int p1, int p2, ds.PK l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (l != null);
    return new P444K()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_L = 4;

  int _p0;
  int _p1;
  int _p2;
  ds.PK _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  ds.PK get l => _l;
  void set l(ds.PK l) { _l = l; }
}



/// message P444S {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required uint32 p2 = 3;
///   required ds.PS l = 4;
/// }
class P444S {
  static P444S fromMap(Map<String,dynamic> map, [ P444S item ]) {
    if (map == null) return item;

    item ??= new P444S();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._l = ds.PS.fromMap(map["4"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P444S $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P444S item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._l == null ? null : ds.PS.toMap(item._l),
  };
  static P444S $create(
    int p0, int p1, int p2, ds.PS l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (l != null);
    return new P444S()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_L = 4;

  int _p0;
  int _p1;
  int _p2;
  ds.PS _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  ds.PS get l => _l;
  void set l(ds.PS l) { _l = l; }
}



/// message P411 {
///   required uint32 p0 = 1;
///   required int8 p1 = 2;
///   required ds.P1 l = 3;
/// }
class P411 {
  static P411 fromMap(Map<String,dynamic> map, [ P411 item ]) {
    if (map == null) return item;

    item ??= new P411();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P1.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P411 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P411 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P1.toMap(item._l),
  };
  static P411 $create(
    int p0, int p1, ds.P1 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P411()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.P1 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P1 get l => _l;
  void set l(ds.P1 l) { _l = l; }
}



/// message P414 {
///   required uint32 p0 = 1;
///   required int8 p1 = 2;
///   required ds.P4 l = 3;
/// }
class P414 {
  static P414 fromMap(Map<String,dynamic> map, [ P414 item ]) {
    if (map == null) return item;

    item ??= new P414();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P4.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P414 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P414 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P4.toMap(item._l),
  };
  static P414 $create(
    int p0, int p1, ds.P4 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P414()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.P4 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P4 get l => _l;
  void set l(ds.P4 l) { _l = l; }
}



/// message P418 {
///   required uint32 p0 = 1;
///   required int8 p1 = 2;
///   required ds.P8 l = 3;
/// }
class P418 {
  static P418 fromMap(Map<String,dynamic> map, [ P418 item ]) {
    if (map == null) return item;

    item ??= new P418();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P8.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P418 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P418 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P8.toMap(item._l),
  };
  static P418 $create(
    int p0, int p1, ds.P8 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P418()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.P8 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P8 get l => _l;
  void set l(ds.P8 l) { _l = l; }
}



/// message P41D {
///   required uint32 p0 = 1;
///   required int8 p1 = 2;
///   required ds.PD l = 3;
/// }
class P41D {
  static P41D fromMap(Map<String,dynamic> map, [ P41D item ]) {
    if (map == null) return item;

    item ??= new P41D();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PD.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P41D $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P41D item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PD.toMap(item._l),
  };
  static P41D $create(
    int p0, int p1, ds.PD l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P41D()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.PD _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PD get l => _l;
  void set l(ds.PD l) { _l = l; }
}



/// message P41K {
///   required uint32 p0 = 1;
///   required int8 p1 = 2;
///   required ds.PK l = 3;
/// }
class P41K {
  static P41K fromMap(Map<String,dynamic> map, [ P41K item ]) {
    if (map == null) return item;

    item ??= new P41K();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PK.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P41K $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P41K item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PK.toMap(item._l),
  };
  static P41K $create(
    int p0, int p1, ds.PK l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P41K()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.PK _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PK get l => _l;
  void set l(ds.PK l) { _l = l; }
}



/// message P41S {
///   required uint32 p0 = 1;
///   required int8 p1 = 2;
///   required ds.PS l = 3;
/// }
class P41S {
  static P41S fromMap(Map<String,dynamic> map, [ P41S item ]) {
    if (map == null) return item;

    item ??= new P41S();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PS.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P41S $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P41S item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PS.toMap(item._l),
  };
  static P41S $create(
    int p0, int p1, ds.PS l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P41S()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.PS _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PS get l => _l;
  void set l(ds.PS l) { _l = l; }
}



/// message P481 {
///   required uint32 p0 = 1;
///   required uint64 p1 = 2;
///   required ds.P1 l = 3;
/// }
class P481 {
  static P481 fromMap(Map<String,dynamic> map, [ P481 item ]) {
    if (map == null) return item;

    item ??= new P481();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P1.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P481 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P481 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P1.toMap(item._l),
  };
  static P481 $create(
    int p0, int p1, ds.P1 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P481()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.P1 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P1 get l => _l;
  void set l(ds.P1 l) { _l = l; }
}



/// message P484 {
///   required uint32 p0 = 1;
///   required uint64 p1 = 2;
///   required ds.P4 l = 3;
/// }
class P484 {
  static P484 fromMap(Map<String,dynamic> map, [ P484 item ]) {
    if (map == null) return item;

    item ??= new P484();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P4.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P484 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P484 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P4.toMap(item._l),
  };
  static P484 $create(
    int p0, int p1, ds.P4 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P484()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.P4 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P4 get l => _l;
  void set l(ds.P4 l) { _l = l; }
}



/// message P488 {
///   required uint32 p0 = 1;
///   required uint64 p1 = 2;
///   required ds.P8 l = 3;
/// }
class P488 {
  static P488 fromMap(Map<String,dynamic> map, [ P488 item ]) {
    if (map == null) return item;

    item ??= new P488();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P8.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P488 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P488 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P8.toMap(item._l),
  };
  static P488 $create(
    int p0, int p1, ds.P8 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P488()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.P8 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P8 get l => _l;
  void set l(ds.P8 l) { _l = l; }
}



/// message P48D {
///   required uint32 p0 = 1;
///   required uint64 p1 = 2;
///   required ds.PD l = 3;
/// }
class P48D {
  static P48D fromMap(Map<String,dynamic> map, [ P48D item ]) {
    if (map == null) return item;

    item ??= new P48D();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PD.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P48D $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P48D item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PD.toMap(item._l),
  };
  static P48D $create(
    int p0, int p1, ds.PD l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P48D()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.PD _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PD get l => _l;
  void set l(ds.PD l) { _l = l; }
}



/// message P48K {
///   required uint32 p0 = 1;
///   required uint64 p1 = 2;
///   required ds.PK l = 3;
/// }
class P48K {
  static P48K fromMap(Map<String,dynamic> map, [ P48K item ]) {
    if (map == null) return item;

    item ??= new P48K();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PK.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P48K $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P48K item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PK.toMap(item._l),
  };
  static P48K $create(
    int p0, int p1, ds.PK l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P48K()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.PK _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PK get l => _l;
  void set l(ds.PK l) { _l = l; }
}



/// message P48S {
///   required uint32 p0 = 1;
///   required uint64 p1 = 2;
///   required ds.PS l = 3;
/// }
class P48S {
  static P48S fromMap(Map<String,dynamic> map, [ P48S item ]) {
    if (map == null) return item;

    item ??= new P48S();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PS.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P48S $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P48S item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PS.toMap(item._l),
  };
  static P48S $create(
    int p0, int p1, ds.PS l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P48S()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.PS _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PS get l => _l;
  void set l(ds.PS l) { _l = l; }
}



/// message P4D1 {
///   required uint32 p0 = 1;
///   required uint64 p1 = 2;
///   required ds.P1 l = 3;
/// }
class P4D1 {
  static P4D1 fromMap(Map<String,dynamic> map, [ P4D1 item ]) {
    if (map == null) return item;

    item ??= new P4D1();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P1.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4D1 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4D1 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P1.toMap(item._l),
  };
  static P4D1 $create(
    int p0, int p1, ds.P1 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P4D1()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.P1 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P1 get l => _l;
  void set l(ds.P1 l) { _l = l; }
}



/// message P4D4 {
///   required uint32 p0 = 1;
///   required uint64 p1 = 2;
///   required ds.P4 l = 3;
/// }
class P4D4 {
  static P4D4 fromMap(Map<String,dynamic> map, [ P4D4 item ]) {
    if (map == null) return item;

    item ??= new P4D4();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P4.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4D4 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4D4 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P4.toMap(item._l),
  };
  static P4D4 $create(
    int p0, int p1, ds.P4 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P4D4()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.P4 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P4 get l => _l;
  void set l(ds.P4 l) { _l = l; }
}



/// message P4D8 {
///   required uint32 p0 = 1;
///   required uint64 p1 = 2;
///   required ds.P8 l = 3;
/// }
class P4D8 {
  static P4D8 fromMap(Map<String,dynamic> map, [ P4D8 item ]) {
    if (map == null) return item;

    item ??= new P4D8();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P8.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4D8 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4D8 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P8.toMap(item._l),
  };
  static P4D8 $create(
    int p0, int p1, ds.P8 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P4D8()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.P8 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P8 get l => _l;
  void set l(ds.P8 l) { _l = l; }
}



/// message P4DD {
///   required uint32 p0 = 1;
///   required uint64 p1 = 2;
///   required ds.PD l = 3;
/// }
class P4DD {
  static P4DD fromMap(Map<String,dynamic> map, [ P4DD item ]) {
    if (map == null) return item;

    item ??= new P4DD();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PD.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4DD $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4DD item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PD.toMap(item._l),
  };
  static P4DD $create(
    int p0, int p1, ds.PD l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P4DD()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.PD _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PD get l => _l;
  void set l(ds.PD l) { _l = l; }
}



/// message P4DK {
///   required uint32 p0 = 1;
///   required uint64 p1 = 2;
///   required ds.PK l = 3;
/// }
class P4DK {
  static P4DK fromMap(Map<String,dynamic> map, [ P4DK item ]) {
    if (map == null) return item;

    item ??= new P4DK();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PK.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4DK $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4DK item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PK.toMap(item._l),
  };
  static P4DK $create(
    int p0, int p1, ds.PK l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P4DK()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.PK _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PK get l => _l;
  void set l(ds.PK l) { _l = l; }
}



/// message P4DS {
///   required uint32 p0 = 1;
///   required uint64 p1 = 2;
///   required ds.PS l = 3;
/// }
class P4DS {
  static P4DS fromMap(Map<String,dynamic> map, [ P4DS item ]) {
    if (map == null) return item;

    item ??= new P4DS();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PS.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4DS $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4DS item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PS.toMap(item._l),
  };
  static P4DS $create(
    int p0, int p1, ds.PS l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P4DS()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.PS _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PS get l => _l;
  void set l(ds.PS l) { _l = l; }
}



/// message P4K1 {
///   required uint32 p0 = 1;
///   required bytes p1 = 2;
///   required ds.P1 l = 3;
/// }
class P4K1 {
  static P4K1 fromMap(Map<String,dynamic> map, [ P4K1 item ]) {
    if (map == null) return item;

    item ??= new P4K1();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P1.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4K1 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4K1 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P1.toMap(item._l),
  };
  static P4K1 $create(
    int p0, String p1, ds.P1 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P4K1()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  String _p1;
  ds.P1 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.P1 get l => _l;
  void set l(ds.P1 l) { _l = l; }
}



/// message P4K4 {
///   required uint32 p0 = 1;
///   required bytes p1 = 2;
///   required ds.P4 l = 3;
/// }
class P4K4 {
  static P4K4 fromMap(Map<String,dynamic> map, [ P4K4 item ]) {
    if (map == null) return item;

    item ??= new P4K4();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P4.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4K4 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4K4 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P4.toMap(item._l),
  };
  static P4K4 $create(
    int p0, String p1, ds.P4 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P4K4()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  String _p1;
  ds.P4 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.P4 get l => _l;
  void set l(ds.P4 l) { _l = l; }
}



/// message P4K8 {
///   required uint32 p0 = 1;
///   required bytes p1 = 2;
///   required ds.P8 l = 3;
/// }
class P4K8 {
  static P4K8 fromMap(Map<String,dynamic> map, [ P4K8 item ]) {
    if (map == null) return item;

    item ??= new P4K8();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P8.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4K8 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4K8 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P8.toMap(item._l),
  };
  static P4K8 $create(
    int p0, String p1, ds.P8 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P4K8()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  String _p1;
  ds.P8 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.P8 get l => _l;
  void set l(ds.P8 l) { _l = l; }
}



/// message P4KD {
///   required uint32 p0 = 1;
///   required bytes p1 = 2;
///   required ds.PD l = 3;
/// }
class P4KD {
  static P4KD fromMap(Map<String,dynamic> map, [ P4KD item ]) {
    if (map == null) return item;

    item ??= new P4KD();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PD.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4KD $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4KD item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PD.toMap(item._l),
  };
  static P4KD $create(
    int p0, String p1, ds.PD l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P4KD()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  String _p1;
  ds.PD _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.PD get l => _l;
  void set l(ds.PD l) { _l = l; }
}



/// message P4KK {
///   required uint32 p0 = 1;
///   required bytes p1 = 2;
///   required ds.PK l = 3;
/// }
class P4KK {
  static P4KK fromMap(Map<String,dynamic> map, [ P4KK item ]) {
    if (map == null) return item;

    item ??= new P4KK();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PK.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4KK $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4KK item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PK.toMap(item._l),
  };
  static P4KK $create(
    int p0, String p1, ds.PK l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P4KK()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  String _p1;
  ds.PK _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.PK get l => _l;
  void set l(ds.PK l) { _l = l; }
}



/// message P4KS {
///   required uint32 p0 = 1;
///   required bytes p1 = 2;
///   required ds.PS l = 3;
/// }
class P4KS {
  static P4KS fromMap(Map<String,dynamic> map, [ P4KS item ]) {
    if (map == null) return item;

    item ??= new P4KS();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PS.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4KS $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4KS item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PS.toMap(item._l),
  };
  static P4KS $create(
    int p0, String p1, ds.PS l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P4KS()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  String _p1;
  ds.PS _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.PS get l => _l;
  void set l(ds.PS l) { _l = l; }
}



/// message P441 {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required ds.P1 l = 3;
/// }
class P441 {
  static P441 fromMap(Map<String,dynamic> map, [ P441 item ]) {
    if (map == null) return item;

    item ??= new P441();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P1.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P441 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P441 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P1.toMap(item._l),
  };
  static P441 $create(
    int p0, int p1, ds.P1 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P441()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.P1 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P1 get l => _l;
  void set l(ds.P1 l) { _l = l; }
}



/// message P444 {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required ds.P4 l = 3;
/// }
class P444 {
  static P444 fromMap(Map<String,dynamic> map, [ P444 item ]) {
    if (map == null) return item;

    item ??= new P444();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P4.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P444 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P444 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P4.toMap(item._l),
  };
  static P444 $create(
    int p0, int p1, ds.P4 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P444()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.P4 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P4 get l => _l;
  void set l(ds.P4 l) { _l = l; }
}



/// message P448 {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required ds.P8 l = 3;
/// }
class P448 {
  static P448 fromMap(Map<String,dynamic> map, [ P448 item ]) {
    if (map == null) return item;

    item ??= new P448();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P8.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P448 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P448 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P8.toMap(item._l),
  };
  static P448 $create(
    int p0, int p1, ds.P8 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P448()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.P8 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P8 get l => _l;
  void set l(ds.P8 l) { _l = l; }
}



/// message P44D {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required ds.PD l = 3;
/// }
class P44D {
  static P44D fromMap(Map<String,dynamic> map, [ P44D item ]) {
    if (map == null) return item;

    item ??= new P44D();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PD.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P44D $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P44D item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PD.toMap(item._l),
  };
  static P44D $create(
    int p0, int p1, ds.PD l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P44D()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.PD _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PD get l => _l;
  void set l(ds.PD l) { _l = l; }
}



/// message P44K {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required ds.PK l = 3;
/// }
class P44K {
  static P44K fromMap(Map<String,dynamic> map, [ P44K item ]) {
    if (map == null) return item;

    item ??= new P44K();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PK.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P44K $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P44K item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PK.toMap(item._l),
  };
  static P44K $create(
    int p0, int p1, ds.PK l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P44K()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.PK _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PK get l => _l;
  void set l(ds.PK l) { _l = l; }
}



/// message P44S {
///   required uint32 p0 = 1;
///   required uint32 p1 = 2;
///   required ds.PS l = 3;
/// }
class P44S {
  static P44S fromMap(Map<String,dynamic> map, [ P44S item ]) {
    if (map == null) return item;

    item ??= new P44S();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PS.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P44S $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P44S item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PS.toMap(item._l),
  };
  static P44S $create(
    int p0, int p1, ds.PS l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P44S()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  int _p1;
  ds.PS _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PS get l => _l;
  void set l(ds.PS l) { _l = l; }
}



/// message P4S1 {
///   required uint32 p0 = 1;
///   required string p1 = 2;
///   required ds.P1 l = 3;
/// }
class P4S1 {
  static P4S1 fromMap(Map<String,dynamic> map, [ P4S1 item ]) {
    if (map == null) return item;

    item ??= new P4S1();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P1.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4S1 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4S1 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P1.toMap(item._l),
  };
  static P4S1 $create(
    int p0, String p1, ds.P1 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P4S1()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  String _p1;
  ds.P1 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.P1 get l => _l;
  void set l(ds.P1 l) { _l = l; }
}



/// message P4S4 {
///   required uint32 p0 = 1;
///   required string p1 = 2;
///   required ds.P4 l = 3;
/// }
class P4S4 {
  static P4S4 fromMap(Map<String,dynamic> map, [ P4S4 item ]) {
    if (map == null) return item;

    item ??= new P4S4();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P4.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4S4 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4S4 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P4.toMap(item._l),
  };
  static P4S4 $create(
    int p0, String p1, ds.P4 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P4S4()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  String _p1;
  ds.P4 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.P4 get l => _l;
  void set l(ds.P4 l) { _l = l; }
}



/// message P4S8 {
///   required uint32 p0 = 1;
///   required string p1 = 2;
///   required ds.P8 l = 3;
/// }
class P4S8 {
  static P4S8 fromMap(Map<String,dynamic> map, [ P4S8 item ]) {
    if (map == null) return item;

    item ??= new P4S8();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P8.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4S8 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4S8 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P8.toMap(item._l),
  };
  static P4S8 $create(
    int p0, String p1, ds.P8 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P4S8()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  String _p1;
  ds.P8 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.P8 get l => _l;
  void set l(ds.P8 l) { _l = l; }
}



/// message P4SD {
///   required uint32 p0 = 1;
///   required string p1 = 2;
///   required ds.PD l = 3;
/// }
class P4SD {
  static P4SD fromMap(Map<String,dynamic> map, [ P4SD item ]) {
    if (map == null) return item;

    item ??= new P4SD();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PD.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4SD $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4SD item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PD.toMap(item._l),
  };
  static P4SD $create(
    int p0, String p1, ds.PD l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P4SD()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  String _p1;
  ds.PD _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.PD get l => _l;
  void set l(ds.PD l) { _l = l; }
}



/// message P4SK {
///   required uint32 p0 = 1;
///   required string p1 = 2;
///   required ds.PK l = 3;
/// }
class P4SK {
  static P4SK fromMap(Map<String,dynamic> map, [ P4SK item ]) {
    if (map == null) return item;

    item ??= new P4SK();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PK.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4SK $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4SK item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PK.toMap(item._l),
  };
  static P4SK $create(
    int p0, String p1, ds.PK l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P4SK()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  String _p1;
  ds.PK _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.PK get l => _l;
  void set l(ds.PK l) { _l = l; }
}



/// message P4SS {
///   required uint32 p0 = 1;
///   required string p1 = 2;
///   required ds.PS l = 3;
/// }
class P4SS {
  static P4SS fromMap(Map<String,dynamic> map, [ P4SS item ]) {
    if (map == null) return item;

    item ??= new P4SS();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PS.fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4SS $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4SS item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PS.toMap(item._l),
  };
  static P4SS $create(
    int p0, String p1, ds.PS l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new P4SS()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  int _p0;
  String _p1;
  ds.PS _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.PS get l => _l;
  void set l(ds.PS l) { _l = l; }
}



/// message P41 {
///   required uint32 p0 = 1;
///   required ds.P1 l = 2;
/// }
class P41 {
  static P41 fromMap(Map<String,dynamic> map, [ P41 item ]) {
    if (map == null) return item;

    item ??= new P41();
    item._p0 = map["1"];
    item._l = ds.P1.fromMap(map["2"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P41 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P41 item) => {
    "1": item._p0,
    "2": item._l == null ? null : ds.P1.toMap(item._l),
  };
  static P41 $create(
    int p0, ds.P1 l, 
  ) {
    assert (p0 != null);
    assert (l != null);
    return new P41()
      .._p0 = p0
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_L = 2;

  int _p0;
  ds.P1 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  ds.P1 get l => _l;
  void set l(ds.P1 l) { _l = l; }
}



/// message P44 {
///   required uint32 p0 = 1;
///   required ds.P4 l = 2;
/// }
class P44 {
  static P44 fromMap(Map<String,dynamic> map, [ P44 item ]) {
    if (map == null) return item;

    item ??= new P44();
    item._p0 = map["1"];
    item._l = ds.P4.fromMap(map["2"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P44 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P44 item) => {
    "1": item._p0,
    "2": item._l == null ? null : ds.P4.toMap(item._l),
  };
  static P44 $create(
    int p0, ds.P4 l, 
  ) {
    assert (p0 != null);
    assert (l != null);
    return new P44()
      .._p0 = p0
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_L = 2;

  int _p0;
  ds.P4 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  ds.P4 get l => _l;
  void set l(ds.P4 l) { _l = l; }
}



/// message P48 {
///   required uint32 p0 = 1;
///   required ds.P8 l = 2;
/// }
class P48 {
  static P48 fromMap(Map<String,dynamic> map, [ P48 item ]) {
    if (map == null) return item;

    item ??= new P48();
    item._p0 = map["1"];
    item._l = ds.P8.fromMap(map["2"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P48 $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P48 item) => {
    "1": item._p0,
    "2": item._l == null ? null : ds.P8.toMap(item._l),
  };
  static P48 $create(
    int p0, ds.P8 l, 
  ) {
    assert (p0 != null);
    assert (l != null);
    return new P48()
      .._p0 = p0
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_L = 2;

  int _p0;
  ds.P8 _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  ds.P8 get l => _l;
  void set l(ds.P8 l) { _l = l; }
}



/// message P4D {
///   required uint32 p0 = 1;
///   required ds.PD l = 2;
/// }
class P4D {
  static P4D fromMap(Map<String,dynamic> map, [ P4D item ]) {
    if (map == null) return item;

    item ??= new P4D();
    item._p0 = map["1"];
    item._l = ds.PD.fromMap(map["2"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4D $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4D item) => {
    "1": item._p0,
    "2": item._l == null ? null : ds.PD.toMap(item._l),
  };
  static P4D $create(
    int p0, ds.PD l, 
  ) {
    assert (p0 != null);
    assert (l != null);
    return new P4D()
      .._p0 = p0
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_L = 2;

  int _p0;
  ds.PD _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  ds.PD get l => _l;
  void set l(ds.PD l) { _l = l; }
}



/// message P4K {
///   required uint32 p0 = 1;
///   required ds.PK l = 2;
/// }
class P4K {
  static P4K fromMap(Map<String,dynamic> map, [ P4K item ]) {
    if (map == null) return item;

    item ??= new P4K();
    item._p0 = map["1"];
    item._l = ds.PK.fromMap(map["2"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4K $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4K item) => {
    "1": item._p0,
    "2": item._l == null ? null : ds.PK.toMap(item._l),
  };
  static P4K $create(
    int p0, ds.PK l, 
  ) {
    assert (p0 != null);
    assert (l != null);
    return new P4K()
      .._p0 = p0
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_L = 2;

  int _p0;
  ds.PK _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  ds.PK get l => _l;
  void set l(ds.PK l) { _l = l; }
}



/// message P4S {
///   required uint32 p0 = 1;
///   required ds.PS l = 2;
/// }
class P4S {
  static P4S fromMap(Map<String,dynamic> map, [ P4S item ]) {
    if (map == null) return item;

    item ??= new P4S();
    item._p0 = map["1"];
    item._l = ds.PS.fromMap(map["2"] as Map<String,dynamic>, item._l);
    return item;
  }
  static P4S $(dynamic data) {
      if (data is Map)
        return fromMap(data as Map<String,dynamic>);

      throw data;
  }
  static Map<String,dynamic> toMap(P4S item) => {
    "1": item._p0,
    "2": item._l == null ? null : ds.PS.toMap(item._l),
  };
  static P4S $create(
    int p0, ds.PS l, 
  ) {
    assert (p0 != null);
    assert (l != null);
    return new P4S()
      .._p0 = p0
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_L = 2;

  int _p0;
  ds.PS _l;

  /// required: 1
  int get p0 => _p0;
  void set p0(int p0) { _p0 = p0; }

  /// required: 2
  ds.PS get l => _l;
  void set l(ds.PS l) { _l = l; }
}


