// Generated by fbsgen from p/ds/prk/pk

import '../../ds.dart' as ds;



/// message PK111 {
///   required bytes p0 = 1;
///   required int8 p1 = 2;
///   required int8 p2 = 3;
///   required ds.P1 l = 4;
/// }
class PK111 {
  static PK111 $fromMap(Map<String,dynamic> map, [ PK111 item ]) {
    if (map == null) return item;

    item ??= new PK111();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._l = ds.P1.$fromMap(map["4"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK111 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK111 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._l == null ? null : ds.P1.$toMap(item._l),
  };
  static PK111 $create(
    String p0, int p1, int p2, ds.P1 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (l != null);
    return new PK111()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_L = 4;

  String _p0;
  int _p1;
  int _p2;
  ds.P1 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  ds.P1 get l => _l;
  void set l(ds.P1 l) { _l = l; }
}



/// message PK114 {
///   required bytes p0 = 1;
///   required int8 p1 = 2;
///   required int8 p2 = 3;
///   required ds.P4 l = 4;
/// }
class PK114 {
  static PK114 $fromMap(Map<String,dynamic> map, [ PK114 item ]) {
    if (map == null) return item;

    item ??= new PK114();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._l = ds.P4.$fromMap(map["4"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK114 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK114 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._l == null ? null : ds.P4.$toMap(item._l),
  };
  static PK114 $create(
    String p0, int p1, int p2, ds.P4 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (l != null);
    return new PK114()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_L = 4;

  String _p0;
  int _p1;
  int _p2;
  ds.P4 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  ds.P4 get l => _l;
  void set l(ds.P4 l) { _l = l; }
}



/// message PK118 {
///   required bytes p0 = 1;
///   required int8 p1 = 2;
///   required int8 p2 = 3;
///   required ds.P8 l = 4;
/// }
class PK118 {
  static PK118 $fromMap(Map<String,dynamic> map, [ PK118 item ]) {
    if (map == null) return item;

    item ??= new PK118();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._l = ds.P8.$fromMap(map["4"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK118 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK118 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._l == null ? null : ds.P8.$toMap(item._l),
  };
  static PK118 $create(
    String p0, int p1, int p2, ds.P8 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (l != null);
    return new PK118()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_L = 4;

  String _p0;
  int _p1;
  int _p2;
  ds.P8 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  ds.P8 get l => _l;
  void set l(ds.P8 l) { _l = l; }
}



/// message PK11D {
///   required bytes p0 = 1;
///   required int8 p1 = 2;
///   required int8 p2 = 3;
///   required ds.PD l = 4;
/// }
class PK11D {
  static PK11D $fromMap(Map<String,dynamic> map, [ PK11D item ]) {
    if (map == null) return item;

    item ??= new PK11D();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._l = ds.PD.$fromMap(map["4"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK11D $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK11D item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._l == null ? null : ds.PD.$toMap(item._l),
  };
  static PK11D $create(
    String p0, int p1, int p2, ds.PD l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (l != null);
    return new PK11D()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_L = 4;

  String _p0;
  int _p1;
  int _p2;
  ds.PD _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  ds.PD get l => _l;
  void set l(ds.PD l) { _l = l; }
}



/// message PK11K {
///   required bytes p0 = 1;
///   required int8 p1 = 2;
///   required int8 p2 = 3;
///   required ds.PK l = 4;
/// }
class PK11K {
  static PK11K $fromMap(Map<String,dynamic> map, [ PK11K item ]) {
    if (map == null) return item;

    item ??= new PK11K();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._l = ds.PK.$fromMap(map["4"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK11K $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK11K item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._l == null ? null : ds.PK.$toMap(item._l),
  };
  static PK11K $create(
    String p0, int p1, int p2, ds.PK l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (l != null);
    return new PK11K()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_L = 4;

  String _p0;
  int _p1;
  int _p2;
  ds.PK _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  ds.PK get l => _l;
  void set l(ds.PK l) { _l = l; }
}



/// message PK11S {
///   required bytes p0 = 1;
///   required int8 p1 = 2;
///   required int8 p2 = 3;
///   required ds.PS l = 4;
/// }
class PK11S {
  static PK11S $fromMap(Map<String,dynamic> map, [ PK11S item ]) {
    if (map == null) return item;

    item ??= new PK11S();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._l = ds.PS.$fromMap(map["4"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK11S $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK11S item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._l == null ? null : ds.PS.$toMap(item._l),
  };
  static PK11S $create(
    String p0, int p1, int p2, ds.PS l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (l != null);
    return new PK11S()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_L = 4;

  String _p0;
  int _p1;
  int _p2;
  ds.PS _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  ds.PS get l => _l;
  void set l(ds.PS l) { _l = l; }
}




/// message PK81 {
///   required bytes p0 = 1;
///   required uint64 p1 = 2;
///   required ds.P1 l = 3;
/// }
class PK81 {
  static PK81 $fromMap(Map<String,dynamic> map, [ PK81 item ]) {
    if (map == null) return item;

    item ??= new PK81();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P1.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK81 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK81 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P1.$toMap(item._l),
  };
  static PK81 $create(
    String p0, int p1, ds.P1 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PK81()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.P1 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P1 get l => _l;
  void set l(ds.P1 l) { _l = l; }
}



/// message PK84 {
///   required bytes p0 = 1;
///   required uint64 p1 = 2;
///   required ds.P4 l = 3;
/// }
class PK84 {
  static PK84 $fromMap(Map<String,dynamic> map, [ PK84 item ]) {
    if (map == null) return item;

    item ??= new PK84();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P4.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK84 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK84 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P4.$toMap(item._l),
  };
  static PK84 $create(
    String p0, int p1, ds.P4 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PK84()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.P4 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P4 get l => _l;
  void set l(ds.P4 l) { _l = l; }
}



/// message PK88 {
///   required bytes p0 = 1;
///   required uint64 p1 = 2;
///   required ds.P8 l = 3;
/// }
class PK88 {
  static PK88 $fromMap(Map<String,dynamic> map, [ PK88 item ]) {
    if (map == null) return item;

    item ??= new PK88();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P8.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK88 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK88 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P8.$toMap(item._l),
  };
  static PK88 $create(
    String p0, int p1, ds.P8 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PK88()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.P8 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P8 get l => _l;
  void set l(ds.P8 l) { _l = l; }
}



/// message PK8D {
///   required bytes p0 = 1;
///   required uint64 p1 = 2;
///   required ds.PD l = 3;
/// }
class PK8D {
  static PK8D $fromMap(Map<String,dynamic> map, [ PK8D item ]) {
    if (map == null) return item;

    item ??= new PK8D();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PD.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK8D $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK8D item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PD.$toMap(item._l),
  };
  static PK8D $create(
    String p0, int p1, ds.PD l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PK8D()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.PD _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PD get l => _l;
  void set l(ds.PD l) { _l = l; }
}



/// message PK8K {
///   required bytes p0 = 1;
///   required uint64 p1 = 2;
///   required ds.PK l = 3;
/// }
class PK8K {
  static PK8K $fromMap(Map<String,dynamic> map, [ PK8K item ]) {
    if (map == null) return item;

    item ??= new PK8K();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PK.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK8K $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK8K item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PK.$toMap(item._l),
  };
  static PK8K $create(
    String p0, int p1, ds.PK l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PK8K()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.PK _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PK get l => _l;
  void set l(ds.PK l) { _l = l; }
}



/// message PK8S {
///   required bytes p0 = 1;
///   required uint64 p1 = 2;
///   required ds.PS l = 3;
/// }
class PK8S {
  static PK8S $fromMap(Map<String,dynamic> map, [ PK8S item ]) {
    if (map == null) return item;

    item ??= new PK8S();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PS.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK8S $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK8S item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PS.$toMap(item._l),
  };
  static PK8S $create(
    String p0, int p1, ds.PS l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PK8S()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.PS _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PS get l => _l;
  void set l(ds.PS l) { _l = l; }
}




/// message PK1111 {
///   required bytes p0 = 1;
///   required int8 p1 = 2;
///   required int8 p2 = 3;
///   required int8 p3 = 4;
///   required ds.P1 l = 5;
/// }
class PK1111 {
  static PK1111 $fromMap(Map<String,dynamic> map, [ PK1111 item ]) {
    if (map == null) return item;

    item ??= new PK1111();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._p3 = map["4"];
    item._l = ds.P1.$fromMap(map["5"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK1111 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK1111 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._p3,
    "5": item._l == null ? null : ds.P1.$toMap(item._l),
  };
  static PK1111 $create(
    String p0, int p1, int p2, int p3, ds.P1 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (p3 != null);
    assert (l != null);
    return new PK1111()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._p3 = p3
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_P3 = 4;
  static const int FN_L = 5;

  String _p0;
  int _p1;
  int _p2;
  int _p3;
  ds.P1 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  int get p3 => _p3;
  void set p3(int p3) { _p3 = p3; }

  /// required: 5
  ds.P1 get l => _l;
  void set l(ds.P1 l) { _l = l; }
}



/// message PK1114 {
///   required bytes p0 = 1;
///   required int8 p1 = 2;
///   required int8 p2 = 3;
///   required int8 p3 = 4;
///   required ds.P4 l = 5;
/// }
class PK1114 {
  static PK1114 $fromMap(Map<String,dynamic> map, [ PK1114 item ]) {
    if (map == null) return item;

    item ??= new PK1114();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._p3 = map["4"];
    item._l = ds.P4.$fromMap(map["5"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK1114 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK1114 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._p3,
    "5": item._l == null ? null : ds.P4.$toMap(item._l),
  };
  static PK1114 $create(
    String p0, int p1, int p2, int p3, ds.P4 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (p3 != null);
    assert (l != null);
    return new PK1114()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._p3 = p3
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_P3 = 4;
  static const int FN_L = 5;

  String _p0;
  int _p1;
  int _p2;
  int _p3;
  ds.P4 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  int get p3 => _p3;
  void set p3(int p3) { _p3 = p3; }

  /// required: 5
  ds.P4 get l => _l;
  void set l(ds.P4 l) { _l = l; }
}



/// message PK1118 {
///   required bytes p0 = 1;
///   required int8 p1 = 2;
///   required int8 p2 = 3;
///   required int8 p3 = 4;
///   required ds.P8 l = 5;
/// }
class PK1118 {
  static PK1118 $fromMap(Map<String,dynamic> map, [ PK1118 item ]) {
    if (map == null) return item;

    item ??= new PK1118();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._p3 = map["4"];
    item._l = ds.P8.$fromMap(map["5"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK1118 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK1118 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._p3,
    "5": item._l == null ? null : ds.P8.$toMap(item._l),
  };
  static PK1118 $create(
    String p0, int p1, int p2, int p3, ds.P8 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (p3 != null);
    assert (l != null);
    return new PK1118()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._p3 = p3
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_P3 = 4;
  static const int FN_L = 5;

  String _p0;
  int _p1;
  int _p2;
  int _p3;
  ds.P8 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  int get p3 => _p3;
  void set p3(int p3) { _p3 = p3; }

  /// required: 5
  ds.P8 get l => _l;
  void set l(ds.P8 l) { _l = l; }
}



/// message PK111D {
///   required bytes p0 = 1;
///   required int8 p1 = 2;
///   required int8 p2 = 3;
///   required int8 p3 = 4;
///   required ds.PD l = 5;
/// }
class PK111D {
  static PK111D $fromMap(Map<String,dynamic> map, [ PK111D item ]) {
    if (map == null) return item;

    item ??= new PK111D();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._p3 = map["4"];
    item._l = ds.PD.$fromMap(map["5"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK111D $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK111D item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._p3,
    "5": item._l == null ? null : ds.PD.$toMap(item._l),
  };
  static PK111D $create(
    String p0, int p1, int p2, int p3, ds.PD l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (p3 != null);
    assert (l != null);
    return new PK111D()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._p3 = p3
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_P3 = 4;
  static const int FN_L = 5;

  String _p0;
  int _p1;
  int _p2;
  int _p3;
  ds.PD _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  int get p3 => _p3;
  void set p3(int p3) { _p3 = p3; }

  /// required: 5
  ds.PD get l => _l;
  void set l(ds.PD l) { _l = l; }
}



/// message PK111K {
///   required bytes p0 = 1;
///   required int8 p1 = 2;
///   required int8 p2 = 3;
///   required int8 p3 = 4;
///   required ds.PK l = 5;
/// }
class PK111K {
  static PK111K $fromMap(Map<String,dynamic> map, [ PK111K item ]) {
    if (map == null) return item;

    item ??= new PK111K();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._p3 = map["4"];
    item._l = ds.PK.$fromMap(map["5"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK111K $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK111K item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._p3,
    "5": item._l == null ? null : ds.PK.$toMap(item._l),
  };
  static PK111K $create(
    String p0, int p1, int p2, int p3, ds.PK l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (p3 != null);
    assert (l != null);
    return new PK111K()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._p3 = p3
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_P3 = 4;
  static const int FN_L = 5;

  String _p0;
  int _p1;
  int _p2;
  int _p3;
  ds.PK _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  int get p3 => _p3;
  void set p3(int p3) { _p3 = p3; }

  /// required: 5
  ds.PK get l => _l;
  void set l(ds.PK l) { _l = l; }
}



/// message PK111S {
///   required bytes p0 = 1;
///   required int8 p1 = 2;
///   required int8 p2 = 3;
///   required int8 p3 = 4;
///   required ds.PS l = 5;
/// }
class PK111S {
  static PK111S $fromMap(Map<String,dynamic> map, [ PK111S item ]) {
    if (map == null) return item;

    item ??= new PK111S();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._p2 = map["3"];
    item._p3 = map["4"];
    item._l = ds.PS.$fromMap(map["5"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK111S $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK111S item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._p2,
    "4": item._p3,
    "5": item._l == null ? null : ds.PS.$toMap(item._l),
  };
  static PK111S $create(
    String p0, int p1, int p2, int p3, ds.PS l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (p2 != null);
    assert (p3 != null);
    assert (l != null);
    return new PK111S()
      .._p0 = p0
      .._p1 = p1
      .._p2 = p2
      .._p3 = p3
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_P2 = 3;
  static const int FN_P3 = 4;
  static const int FN_L = 5;

  String _p0;
  int _p1;
  int _p2;
  int _p3;
  ds.PS _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  int get p2 => _p2;
  void set p2(int p2) { _p2 = p2; }

  /// required: 4
  int get p3 => _p3;
  void set p3(int p3) { _p3 = p3; }

  /// required: 5
  ds.PS get l => _l;
  void set l(ds.PS l) { _l = l; }
}




/// message PK11 {
///   required bytes p0 = 1;
///   required int8 p1 = 2;
///   required ds.P1 l = 3;
/// }
class PK11 {
  static PK11 $fromMap(Map<String,dynamic> map, [ PK11 item ]) {
    if (map == null) return item;

    item ??= new PK11();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P1.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK11 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK11 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P1.$toMap(item._l),
  };
  static PK11 $create(
    String p0, int p1, ds.P1 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PK11()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.P1 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P1 get l => _l;
  void set l(ds.P1 l) { _l = l; }
}



/// message PK14 {
///   required bytes p0 = 1;
///   required int8 p1 = 2;
///   required ds.P4 l = 3;
/// }
class PK14 {
  static PK14 $fromMap(Map<String,dynamic> map, [ PK14 item ]) {
    if (map == null) return item;

    item ??= new PK14();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P4.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK14 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK14 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P4.$toMap(item._l),
  };
  static PK14 $create(
    String p0, int p1, ds.P4 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PK14()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.P4 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P4 get l => _l;
  void set l(ds.P4 l) { _l = l; }
}



/// message PK18 {
///   required bytes p0 = 1;
///   required int8 p1 = 2;
///   required ds.P8 l = 3;
/// }
class PK18 {
  static PK18 $fromMap(Map<String,dynamic> map, [ PK18 item ]) {
    if (map == null) return item;

    item ??= new PK18();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P8.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK18 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK18 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P8.$toMap(item._l),
  };
  static PK18 $create(
    String p0, int p1, ds.P8 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PK18()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.P8 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P8 get l => _l;
  void set l(ds.P8 l) { _l = l; }
}



/// message PK1D {
///   required bytes p0 = 1;
///   required int8 p1 = 2;
///   required ds.PD l = 3;
/// }
class PK1D {
  static PK1D $fromMap(Map<String,dynamic> map, [ PK1D item ]) {
    if (map == null) return item;

    item ??= new PK1D();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PD.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK1D $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK1D item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PD.$toMap(item._l),
  };
  static PK1D $create(
    String p0, int p1, ds.PD l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PK1D()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.PD _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PD get l => _l;
  void set l(ds.PD l) { _l = l; }
}



/// message PK1K {
///   required bytes p0 = 1;
///   required int8 p1 = 2;
///   required ds.PK l = 3;
/// }
class PK1K {
  static PK1K $fromMap(Map<String,dynamic> map, [ PK1K item ]) {
    if (map == null) return item;

    item ??= new PK1K();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PK.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK1K $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK1K item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PK.$toMap(item._l),
  };
  static PK1K $create(
    String p0, int p1, ds.PK l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PK1K()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.PK _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PK get l => _l;
  void set l(ds.PK l) { _l = l; }
}



/// message PK1S {
///   required bytes p0 = 1;
///   required int8 p1 = 2;
///   required ds.PS l = 3;
/// }
class PK1S {
  static PK1S $fromMap(Map<String,dynamic> map, [ PK1S item ]) {
    if (map == null) return item;

    item ??= new PK1S();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PS.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK1S $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK1S item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PS.$toMap(item._l),
  };
  static PK1S $create(
    String p0, int p1, ds.PS l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PK1S()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.PS _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PS get l => _l;
  void set l(ds.PS l) { _l = l; }
}




/// message PKK1 {
///   required bytes p0 = 1;
///   required bytes p1 = 2;
///   required ds.P1 l = 3;
/// }
class PKK1 {
  static PKK1 $fromMap(Map<String,dynamic> map, [ PKK1 item ]) {
    if (map == null) return item;

    item ??= new PKK1();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P1.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKK1 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKK1 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P1.$toMap(item._l),
  };
  static PKK1 $create(
    String p0, String p1, ds.P1 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PKK1()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  String _p1;
  ds.P1 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.P1 get l => _l;
  void set l(ds.P1 l) { _l = l; }
}



/// message PKK4 {
///   required bytes p0 = 1;
///   required bytes p1 = 2;
///   required ds.P4 l = 3;
/// }
class PKK4 {
  static PKK4 $fromMap(Map<String,dynamic> map, [ PKK4 item ]) {
    if (map == null) return item;

    item ??= new PKK4();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P4.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKK4 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKK4 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P4.$toMap(item._l),
  };
  static PKK4 $create(
    String p0, String p1, ds.P4 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PKK4()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  String _p1;
  ds.P4 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.P4 get l => _l;
  void set l(ds.P4 l) { _l = l; }
}



/// message PKK8 {
///   required bytes p0 = 1;
///   required bytes p1 = 2;
///   required ds.P8 l = 3;
/// }
class PKK8 {
  static PKK8 $fromMap(Map<String,dynamic> map, [ PKK8 item ]) {
    if (map == null) return item;

    item ??= new PKK8();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P8.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKK8 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKK8 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P8.$toMap(item._l),
  };
  static PKK8 $create(
    String p0, String p1, ds.P8 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PKK8()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  String _p1;
  ds.P8 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.P8 get l => _l;
  void set l(ds.P8 l) { _l = l; }
}



/// message PKKD {
///   required bytes p0 = 1;
///   required bytes p1 = 2;
///   required ds.PD l = 3;
/// }
class PKKD {
  static PKKD $fromMap(Map<String,dynamic> map, [ PKKD item ]) {
    if (map == null) return item;

    item ??= new PKKD();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PD.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKKD $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKKD item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PD.$toMap(item._l),
  };
  static PKKD $create(
    String p0, String p1, ds.PD l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PKKD()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  String _p1;
  ds.PD _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.PD get l => _l;
  void set l(ds.PD l) { _l = l; }
}



/// message PKKK {
///   required bytes p0 = 1;
///   required bytes p1 = 2;
///   required ds.PK l = 3;
/// }
class PKKK {
  static PKKK $fromMap(Map<String,dynamic> map, [ PKKK item ]) {
    if (map == null) return item;

    item ??= new PKKK();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PK.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKKK $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKKK item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PK.$toMap(item._l),
  };
  static PKKK $create(
    String p0, String p1, ds.PK l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PKKK()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  String _p1;
  ds.PK _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.PK get l => _l;
  void set l(ds.PK l) { _l = l; }
}



/// message PKKS {
///   required bytes p0 = 1;
///   required bytes p1 = 2;
///   required ds.PS l = 3;
/// }
class PKKS {
  static PKKS $fromMap(Map<String,dynamic> map, [ PKKS item ]) {
    if (map == null) return item;

    item ??= new PKKS();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PS.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKKS $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKKS item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PS.$toMap(item._l),
  };
  static PKKS $create(
    String p0, String p1, ds.PS l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PKKS()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  String _p1;
  ds.PS _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.PS get l => _l;
  void set l(ds.PS l) { _l = l; }
}




/// message PK1 {
///   required bytes p0 = 1;
///   required ds.P1 l = 2;
/// }
class PK1 {
  static PK1 $fromMap(Map<String,dynamic> map, [ PK1 item ]) {
    if (map == null) return item;

    item ??= new PK1();
    item._p0 = map["1"];
    item._l = ds.P1.$fromMap(map["2"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK1 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK1 item) => {
    "1": item._p0,
    "2": item._l == null ? null : ds.P1.$toMap(item._l),
  };
  static PK1 $create(
    String p0, ds.P1 l, 
  ) {
    assert (p0 != null);
    assert (l != null);
    return new PK1()
      .._p0 = p0
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_L = 2;

  String _p0;
  ds.P1 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  ds.P1 get l => _l;
  void set l(ds.P1 l) { _l = l; }
}



/// message PK4 {
///   required bytes p0 = 1;
///   required ds.P4 l = 2;
/// }
class PK4 {
  static PK4 $fromMap(Map<String,dynamic> map, [ PK4 item ]) {
    if (map == null) return item;

    item ??= new PK4();
    item._p0 = map["1"];
    item._l = ds.P4.$fromMap(map["2"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK4 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK4 item) => {
    "1": item._p0,
    "2": item._l == null ? null : ds.P4.$toMap(item._l),
  };
  static PK4 $create(
    String p0, ds.P4 l, 
  ) {
    assert (p0 != null);
    assert (l != null);
    return new PK4()
      .._p0 = p0
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_L = 2;

  String _p0;
  ds.P4 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  ds.P4 get l => _l;
  void set l(ds.P4 l) { _l = l; }
}



/// message PK8 {
///   required bytes p0 = 1;
///   required ds.P8 l = 2;
/// }
class PK8 {
  static PK8 $fromMap(Map<String,dynamic> map, [ PK8 item ]) {
    if (map == null) return item;

    item ??= new PK8();
    item._p0 = map["1"];
    item._l = ds.P8.$fromMap(map["2"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK8 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK8 item) => {
    "1": item._p0,
    "2": item._l == null ? null : ds.P8.$toMap(item._l),
  };
  static PK8 $create(
    String p0, ds.P8 l, 
  ) {
    assert (p0 != null);
    assert (l != null);
    return new PK8()
      .._p0 = p0
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_L = 2;

  String _p0;
  ds.P8 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  ds.P8 get l => _l;
  void set l(ds.P8 l) { _l = l; }
}



/// message PKD {
///   required bytes p0 = 1;
///   required ds.PD l = 2;
/// }
class PKD {
  static PKD $fromMap(Map<String,dynamic> map, [ PKD item ]) {
    if (map == null) return item;

    item ??= new PKD();
    item._p0 = map["1"];
    item._l = ds.PD.$fromMap(map["2"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKD $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKD item) => {
    "1": item._p0,
    "2": item._l == null ? null : ds.PD.$toMap(item._l),
  };
  static PKD $create(
    String p0, ds.PD l, 
  ) {
    assert (p0 != null);
    assert (l != null);
    return new PKD()
      .._p0 = p0
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_L = 2;

  String _p0;
  ds.PD _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  ds.PD get l => _l;
  void set l(ds.PD l) { _l = l; }
}



/// message PKK {
///   required bytes p0 = 1;
///   required ds.PK l = 2;
/// }
class PKK {
  static PKK $fromMap(Map<String,dynamic> map, [ PKK item ]) {
    if (map == null) return item;

    item ??= new PKK();
    item._p0 = map["1"];
    item._l = ds.PK.$fromMap(map["2"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKK $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKK item) => {
    "1": item._p0,
    "2": item._l == null ? null : ds.PK.$toMap(item._l),
  };
  static PKK $create(
    String p0, ds.PK l, 
  ) {
    assert (p0 != null);
    assert (l != null);
    return new PKK()
      .._p0 = p0
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_L = 2;

  String _p0;
  ds.PK _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  ds.PK get l => _l;
  void set l(ds.PK l) { _l = l; }
}



/// message PKS {
///   required bytes p0 = 1;
///   required ds.PS l = 2;
/// }
class PKS {
  static PKS $fromMap(Map<String,dynamic> map, [ PKS item ]) {
    if (map == null) return item;

    item ??= new PKS();
    item._p0 = map["1"];
    item._l = ds.PS.$fromMap(map["2"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKS $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKS item) => {
    "1": item._p0,
    "2": item._l == null ? null : ds.PS.$toMap(item._l),
  };
  static PKS $create(
    String p0, ds.PS l, 
  ) {
    assert (p0 != null);
    assert (l != null);
    return new PKS()
      .._p0 = p0
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_L = 2;

  String _p0;
  ds.PS _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  ds.PS get l => _l;
  void set l(ds.PS l) { _l = l; }
}




/// message PKD1 {
///   required bytes p0 = 1;
///   required uint64 p1 = 2;
///   required ds.P1 l = 3;
/// }
class PKD1 {
  static PKD1 $fromMap(Map<String,dynamic> map, [ PKD1 item ]) {
    if (map == null) return item;

    item ??= new PKD1();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P1.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKD1 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKD1 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P1.$toMap(item._l),
  };
  static PKD1 $create(
    String p0, int p1, ds.P1 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PKD1()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.P1 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P1 get l => _l;
  void set l(ds.P1 l) { _l = l; }
}



/// message PKD4 {
///   required bytes p0 = 1;
///   required uint64 p1 = 2;
///   required ds.P4 l = 3;
/// }
class PKD4 {
  static PKD4 $fromMap(Map<String,dynamic> map, [ PKD4 item ]) {
    if (map == null) return item;

    item ??= new PKD4();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P4.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKD4 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKD4 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P4.$toMap(item._l),
  };
  static PKD4 $create(
    String p0, int p1, ds.P4 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PKD4()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.P4 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P4 get l => _l;
  void set l(ds.P4 l) { _l = l; }
}



/// message PKD8 {
///   required bytes p0 = 1;
///   required uint64 p1 = 2;
///   required ds.P8 l = 3;
/// }
class PKD8 {
  static PKD8 $fromMap(Map<String,dynamic> map, [ PKD8 item ]) {
    if (map == null) return item;

    item ??= new PKD8();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P8.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKD8 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKD8 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P8.$toMap(item._l),
  };
  static PKD8 $create(
    String p0, int p1, ds.P8 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PKD8()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.P8 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P8 get l => _l;
  void set l(ds.P8 l) { _l = l; }
}



/// message PKDD {
///   required bytes p0 = 1;
///   required uint64 p1 = 2;
///   required ds.PD l = 3;
/// }
class PKDD {
  static PKDD $fromMap(Map<String,dynamic> map, [ PKDD item ]) {
    if (map == null) return item;

    item ??= new PKDD();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PD.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKDD $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKDD item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PD.$toMap(item._l),
  };
  static PKDD $create(
    String p0, int p1, ds.PD l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PKDD()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.PD _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PD get l => _l;
  void set l(ds.PD l) { _l = l; }
}



/// message PKDK {
///   required bytes p0 = 1;
///   required uint64 p1 = 2;
///   required ds.PK l = 3;
/// }
class PKDK {
  static PKDK $fromMap(Map<String,dynamic> map, [ PKDK item ]) {
    if (map == null) return item;

    item ??= new PKDK();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PK.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKDK $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKDK item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PK.$toMap(item._l),
  };
  static PKDK $create(
    String p0, int p1, ds.PK l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PKDK()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.PK _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PK get l => _l;
  void set l(ds.PK l) { _l = l; }
}



/// message PKDS {
///   required bytes p0 = 1;
///   required uint64 p1 = 2;
///   required ds.PS l = 3;
/// }
class PKDS {
  static PKDS $fromMap(Map<String,dynamic> map, [ PKDS item ]) {
    if (map == null) return item;

    item ??= new PKDS();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PS.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKDS $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKDS item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PS.$toMap(item._l),
  };
  static PKDS $create(
    String p0, int p1, ds.PS l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PKDS()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.PS _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PS get l => _l;
  void set l(ds.PS l) { _l = l; }
}




/// message PK41 {
///   required bytes p0 = 1;
///   required uint32 p1 = 2;
///   required ds.P1 l = 3;
/// }
class PK41 {
  static PK41 $fromMap(Map<String,dynamic> map, [ PK41 item ]) {
    if (map == null) return item;

    item ??= new PK41();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P1.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK41 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK41 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P1.$toMap(item._l),
  };
  static PK41 $create(
    String p0, int p1, ds.P1 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PK41()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.P1 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P1 get l => _l;
  void set l(ds.P1 l) { _l = l; }
}



/// message PK44 {
///   required bytes p0 = 1;
///   required uint32 p1 = 2;
///   required ds.P4 l = 3;
/// }
class PK44 {
  static PK44 $fromMap(Map<String,dynamic> map, [ PK44 item ]) {
    if (map == null) return item;

    item ??= new PK44();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P4.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK44 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK44 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P4.$toMap(item._l),
  };
  static PK44 $create(
    String p0, int p1, ds.P4 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PK44()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.P4 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P4 get l => _l;
  void set l(ds.P4 l) { _l = l; }
}



/// message PK48 {
///   required bytes p0 = 1;
///   required uint32 p1 = 2;
///   required ds.P8 l = 3;
/// }
class PK48 {
  static PK48 $fromMap(Map<String,dynamic> map, [ PK48 item ]) {
    if (map == null) return item;

    item ??= new PK48();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P8.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK48 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK48 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P8.$toMap(item._l),
  };
  static PK48 $create(
    String p0, int p1, ds.P8 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PK48()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.P8 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.P8 get l => _l;
  void set l(ds.P8 l) { _l = l; }
}



/// message PK4D {
///   required bytes p0 = 1;
///   required uint32 p1 = 2;
///   required ds.PD l = 3;
/// }
class PK4D {
  static PK4D $fromMap(Map<String,dynamic> map, [ PK4D item ]) {
    if (map == null) return item;

    item ??= new PK4D();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PD.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK4D $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK4D item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PD.$toMap(item._l),
  };
  static PK4D $create(
    String p0, int p1, ds.PD l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PK4D()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.PD _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PD get l => _l;
  void set l(ds.PD l) { _l = l; }
}



/// message PK4K {
///   required bytes p0 = 1;
///   required uint32 p1 = 2;
///   required ds.PK l = 3;
/// }
class PK4K {
  static PK4K $fromMap(Map<String,dynamic> map, [ PK4K item ]) {
    if (map == null) return item;

    item ??= new PK4K();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PK.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK4K $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK4K item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PK.$toMap(item._l),
  };
  static PK4K $create(
    String p0, int p1, ds.PK l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PK4K()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.PK _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PK get l => _l;
  void set l(ds.PK l) { _l = l; }
}



/// message PK4S {
///   required bytes p0 = 1;
///   required uint32 p1 = 2;
///   required ds.PS l = 3;
/// }
class PK4S {
  static PK4S $fromMap(Map<String,dynamic> map, [ PK4S item ]) {
    if (map == null) return item;

    item ??= new PK4S();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PS.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PK4S $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PK4S item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PS.$toMap(item._l),
  };
  static PK4S $create(
    String p0, int p1, ds.PS l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PK4S()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  int _p1;
  ds.PS _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  int get p1 => _p1;
  void set p1(int p1) { _p1 = p1; }

  /// required: 3
  ds.PS get l => _l;
  void set l(ds.PS l) { _l = l; }
}




/// message PKS1 {
///   required bytes p0 = 1;
///   required string p1 = 2;
///   required ds.P1 l = 3;
/// }
class PKS1 {
  static PKS1 $fromMap(Map<String,dynamic> map, [ PKS1 item ]) {
    if (map == null) return item;

    item ??= new PKS1();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P1.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKS1 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKS1 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P1.$toMap(item._l),
  };
  static PKS1 $create(
    String p0, String p1, ds.P1 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PKS1()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  String _p1;
  ds.P1 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.P1 get l => _l;
  void set l(ds.P1 l) { _l = l; }
}



/// message PKS4 {
///   required bytes p0 = 1;
///   required string p1 = 2;
///   required ds.P4 l = 3;
/// }
class PKS4 {
  static PKS4 $fromMap(Map<String,dynamic> map, [ PKS4 item ]) {
    if (map == null) return item;

    item ??= new PKS4();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P4.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKS4 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKS4 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P4.$toMap(item._l),
  };
  static PKS4 $create(
    String p0, String p1, ds.P4 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PKS4()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  String _p1;
  ds.P4 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.P4 get l => _l;
  void set l(ds.P4 l) { _l = l; }
}



/// message PKS8 {
///   required bytes p0 = 1;
///   required string p1 = 2;
///   required ds.P8 l = 3;
/// }
class PKS8 {
  static PKS8 $fromMap(Map<String,dynamic> map, [ PKS8 item ]) {
    if (map == null) return item;

    item ??= new PKS8();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.P8.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKS8 $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKS8 item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.P8.$toMap(item._l),
  };
  static PKS8 $create(
    String p0, String p1, ds.P8 l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PKS8()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  String _p1;
  ds.P8 _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.P8 get l => _l;
  void set l(ds.P8 l) { _l = l; }
}



/// message PKSD {
///   required bytes p0 = 1;
///   required string p1 = 2;
///   required ds.PD l = 3;
/// }
class PKSD {
  static PKSD $fromMap(Map<String,dynamic> map, [ PKSD item ]) {
    if (map == null) return item;

    item ??= new PKSD();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PD.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKSD $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKSD item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PD.$toMap(item._l),
  };
  static PKSD $create(
    String p0, String p1, ds.PD l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PKSD()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  String _p1;
  ds.PD _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.PD get l => _l;
  void set l(ds.PD l) { _l = l; }
}



/// message PKSK {
///   required bytes p0 = 1;
///   required string p1 = 2;
///   required ds.PK l = 3;
/// }
class PKSK {
  static PKSK $fromMap(Map<String,dynamic> map, [ PKSK item ]) {
    if (map == null) return item;

    item ??= new PKSK();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PK.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKSK $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKSK item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PK.$toMap(item._l),
  };
  static PKSK $create(
    String p0, String p1, ds.PK l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PKSK()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  String _p1;
  ds.PK _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.PK get l => _l;
  void set l(ds.PK l) { _l = l; }
}



/// message PKSS {
///   required bytes p0 = 1;
///   required string p1 = 2;
///   required ds.PS l = 3;
/// }
class PKSS {
  static PKSS $fromMap(Map<String,dynamic> map, [ PKSS item ]) {
    if (map == null) return item;

    item ??= new PKSS();
    item._p0 = map["1"];
    item._p1 = map["2"];
    item._l = ds.PS.$fromMap(map["3"] as Map<String,dynamic>, item._l);
    return item;
  }
  static PKSS $from(dynamic data) {
    if (data is Map)
      return $fromMap(data as Map<String,dynamic>);

    throw data;
  }
  static Map<String,dynamic> $toMap(PKSS item) => {
    "1": item._p0,
    "2": item._p1,
    "3": item._l == null ? null : ds.PS.$toMap(item._l),
  };
  static PKSS $create(
    String p0, String p1, ds.PS l, 
  ) {
    assert (p0 != null);
    assert (p1 != null);
    assert (l != null);
    return new PKSS()
      .._p0 = p0
      .._p1 = p1
      .._l = l;
  }
  static const int FN_P0 = 1;
  static const int FN_P1 = 2;
  static const int FN_L = 3;

  String _p0;
  String _p1;
  ds.PS _l;

  /// required: 1
  String get p0 => _p0;
  void set p0(String p0) { _p0 = p0; }

  /// required: 2
  String get p1 => _p1;
  void set p1(String p1) { _p1 = p1; }

  /// required: 3
  ds.PS get l => _l;
  void set l(ds.PS l) { _l = l; }
}


